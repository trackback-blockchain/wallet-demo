// import { createPrivateKey, KeyObject } from "crypto";
// import { VerifiableCredential, VerifiableCredentialPresentation } from "types";
// // @ts-ignore
// import { CompactSign } from 'jose/jws/compact/sign'

// function generateUnique() {
//   return Math.random().toString(16).slice(2)
// }

// class VerifiableCredentialUtil {

//   createCredential(givenName: string, familyName: string): Promise<VerifiableCredential> {
//     const vc = {
//       "@context": [
//         "https://www.w3.org/2018/credentials/v1",
//         "https://trackback.co/identity/v1"
//       ],
//       "id": "something",
//       "type": [
//         "VerifiableCredential",
//         "DigitalPassportCredential"
//       ],
//       "issuer": `did:trackback.dev:${generateUnique()}`,
//       "expires": "2028-01-01T00:00:00Z",
//       "credentialSubject": {
//         "type": [
//           "DigitalPassport"
//         ],
//         "id": `https://wakanda/dia/001`,
//         "passport": {
//           "id": `did:trackback.dev:${generateUnique()}`,
//           "type": "DigitalPassport",
//           "traveler": {
//             "givenName": givenName,
//             "familyName": familyName,
//             "citizenship": "Wakanda"
//           }
//         }
//       }
//     }

//     console.log(vc)

//     return this.addProof(vc);
//   }

//   async addProof(vc: VerifiableCredential): Promise<VerifiableCredential> {
//     try {

//       console.log('object')
//       const jsonstr = JSON.stringify(vc);

//       const privateKey = createPrivateKey({
//         'key': `-----BEGIN PRIVATE KEY-----\nMC4CAQAwBQYDK2VwBCIEIAZKw6rYSoEqxIWsGqWumcyPKx6aHsuY7EJoQNArm3k3\n-----END PRIVATE KEY-----`,
//         'format': 'pem',
//         'type': 'pkcs8',
//       });


//       const proof = await this.createProof(jsonstr, privateKey);

//       Object.assign(vc, { proof: { ...proof } })

//     } catch (error) {
//       console.log(error)
//     }
//     return vc;
//   }


//   async createProof(jsonstr: string, privateKey: KeyObject) {
//     const encoder = new TextEncoder();

//     const jws_compact = await new CompactSign(encoder.encode(jsonstr))
//       .setProtectedHeader({ alg: 'EdDSA' })
//       .sign(privateKey);

//     const proof = {
//       "type": "Ed25519Signature2020",
//       "created": new Date().toISOString(),
//       "verificationMethod": "did:trackback.dev:0x2a674c8ef2bc79f13faf22d4165ac99efc2cabe6e3194c0a58336fed7c56b1b3",
//       "proofPurpose": "assertionMethod",
//       "proofValue": jws_compact.toString()
//     }

//     return proof;
//   }

//   async createPresentation(vc: VerifiableCredential, privateKey: KeyObject, publicKey: KeyObject): Promise<VerifiableCredentialPresentation> {

//     const presentation: VerifiableCredentialPresentation = {
//       "@context": [
//         "https://www.w3.org/2018/credentials/v1",
//       ],
//       "type": "VerifiablePresentation",
//       "verifiableCredential": [vc],
//       "proof": {}
//     }

//     const pubkeyHex = publicKey.export({ format: 'der', type: 'spki' }).toString('base64');

//     const proof = await this.createProof(JSON.stringify(presentation), privateKey);
//     proof.verificationMethod = `did:trackback.dev:${generateUnique()}#${pubkeyHex}`

//     Object.assign(presentation, { proof: { ...proof } })



//     return presentation;
//   }

// }

// export default new VerifiableCredentialUtil();